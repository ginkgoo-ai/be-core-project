# Create Pre-release when a new tag is created
name: Create Pre-release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  get-some-vars:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag_version.outputs.tag }}
      repo_name: ${{ steps.get_repo_name.outputs.repo_name }}
    steps:
      - name: Dump Github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "GITHUB_CONTEXT: $GITHUB_CONTEXT"

      - id: get_tag_version
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "---- Current tag: ${GITHUB_REF#refs/tags/}"
        shell: bash

      - id: get_repo_name
        run: |
          repo_name=$(echo ${{github.repository}} | awk -F '/' '{print $2}')
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT
          echo "---- Current repo: $repo_name"
        shell: bash

  create-pre-release:
    name: Create Pre-release
    runs-on: ubuntu-latest
    needs: [get-some-vars]
    permissions:
      contents: write
    steps:
      - name: Validate tag format
        run: |
          if [[ ! "${{ needs.get-some-vars.outputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-beta\.[0-9]+)?$ ]]; then
            echo "Invalid tag format!"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Pre-release
        id: create_pre_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: true
          generate_release_notes: true

      # - name: Create Pre-release
      #   run: |
      #     gh release create ${{ needs.get-some-vars.outputs.tag }} \
      #       --prerelease \
      #       --title "Pre-release ${{ needs.get-some-vars.outputs.tag }}" \
      #       --generate-notes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # - name: Create Pre-release
      #   id: create_pre_release
      #   run: |
      #     echo "Creating Pre-release for tag ${{ needs.get-some-vars.outputs.tag }}"
      #     # Create Pre-release here
      #     # For example, create a GitHub release
      #     # https://developer.github.com/v3/repos/releases/#create-a-release
      #     # https://developer.github.com/v3/repos/releases/#upload-a-release-asset
      #     # https://developer.github.com/v3/repos/releases/#edit-a-release
      #     # https://developer.github.com/v3/repos/releases/#delete-a-release
      #     # https://developer.github.com/v3/repos/releases/#delete-a-release-asset
      #     # https://developer.github.com/v3/repos/releases/#get-a-release-by-tag-name
      #     # https://developer.github.com/v3/repos/releases/#list-releases
      #     # https://developer.github.com/v3/repos/releases/#get-a-release-asset
      #     # https://developer.github.com/v3/repos/releases/#list-release-assets


  # deploy-to-railway:
  #   name: Deploy to Railway - staging environment
  #   needs: [get-some-vars,create-pre-release]
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/railwayapp/cli:latest
  #   env:
  #     SVC_ID: ${{ needs.get-some-vars.outputs.repo_name }}
  #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: railway up --service=${{ env.SVC_ID }}

